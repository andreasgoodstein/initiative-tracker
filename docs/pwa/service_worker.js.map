{"version":3,"sources":["pwa/service_worker.ts"],"names":[],"mappings":"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","file":"service_worker.js","sourceRoot":"../src","sourcesContent":["export default null;\r\ndeclare const self: ServiceWorkerGlobalScope;\r\n\r\nconst CACHE_NAME = 'the-initiative-tracker-v1';\r\n\r\nconst urlsToCache = [''];\r\n\r\nself.addEventListener('install', event => {\r\n  // Perform install steps\r\n  event.waitUntil(\r\n    caches.open(CACHE_NAME).then(cache => {\r\n      return cache.addAll(urlsToCache);\r\n    })\r\n  );\r\n});\r\n\r\nself.addEventListener('fetch', event => {\r\n  if (event.request.mode === 'navigate') {\r\n    event.respondWith(\r\n      (async function() {\r\n        const normalizedUrl = new URL(event.request.url);\r\n        normalizedUrl.search = '';\r\n\r\n        const fetchResponseP = fetch(normalizedUrl.toString());\r\n        const fetchResponseCloneP = fetchResponseP.then(r => r.clone());\r\n\r\n        event.waitUntil(\r\n          (async function() {\r\n            const cache = await caches.open(CACHE_NAME);\r\n            await cache.put(\r\n              normalizedUrl.toString(),\r\n              await fetchResponseCloneP\r\n            );\r\n          })()\r\n        );\r\n\r\n        // Prefer the cached response, falling back to the fetch response.\r\n        return (await caches.match(normalizedUrl.toString())) || fetchResponseP;\r\n      })()\r\n    );\r\n  }\r\n});\r\n"]}