{"version":3,"sources":["service_worker.ts"],"names":[],"mappings":"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","file":"service_worker.js","sourceRoot":"../src","sourcesContent":["export default null;\ndeclare const self: ServiceWorkerGlobalScope;\n\nconst CACHE_NAME = 'the-initiative-tracker-v1';\n\nconst urlsToCache = [''];\n\nself.addEventListener('install', (event) => {\n  // Perform install steps\n  event.waitUntil(\n    caches.open(CACHE_NAME).then((cache) => cache.addAll(urlsToCache))\n  );\n});\n\nself.addEventListener('fetch', (event) => {\n  if (event.request.mode === 'navigate') {\n    event.respondWith(\n      (async () => {\n        const normalizedUrl = new URL(event.request.url);\n        normalizedUrl.search = '';\n\n        const fetchResponseP = fetch(normalizedUrl.toString());\n        const fetchResponseCloneP = fetchResponseP.then((r) => r.clone());\n\n        event.waitUntil(\n          (async () => {\n            const cache = await caches.open(CACHE_NAME);\n            await cache.put(\n              normalizedUrl.toString(),\n              await fetchResponseCloneP\n            );\n          })()\n        );\n\n        // Prefer the cached response, falling back to the fetch response.\n        return (await caches.match(normalizedUrl.toString())) || fetchResponseP;\n      })()\n    );\n  }\n});\n"]}